{{- range $serviceName, $service := .Values }}
{{ if ne $serviceName "global" }}

apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ $.Release.Name  }}-{{ $serviceName }}
  labels: 
    app: {{ $.Release.Name  }}-{{ $serviceName }}
spec: 
  replicas: 1
  strategy:
    type: Recreate
  selector: 
    matchLabels: 
      app: {{ $.Release.Name  }}-{{ $serviceName }}
  template: 
    metadata: 
      labels: 
        app: {{ $.Release.Name  }}-{{ $serviceName }}
      annotations:         
        {{ if $service.dapr  }}
        dapr.io/enabled: '{{ $service.dapr.enabled | default "true" }}'
        dapr.io/app-id: '{{ $.Release.Name  }}-{{ $serviceName }}'
        dapr.io/app-port: '{{ $service.dapr.app_port | default "80" }}'
        dapr.io/http-max-request-size: '{{ $service.dapr.http_max_request_size | default "128" }}'
        dapr.io/log-level: '{{ $service.dapr.log_level | default "warn" }}'
        dapr.io/log-as-json: '{{ $service.dapr.log_as_json | default "true" }}'
        dapr.io/sidecar-listen-addresses: '{{ $service.dapr.sidecar_listen_addresses | default "0.0.0.0" }}'
        apr.io/sidecar-memory-limit: '{{ $service.dapr.sidecar_memory_limit | default "256Mi" }}'
        dapr.io/sidecar-memory-request: '{{ $service.dapr.sidecar_memory_request | default "128Mi" }}'

        {{ if or $service.dapr.auth $service.dapr.tracing }} 
        dapr.io/config: '{{ $.Release.Name  }}-{{ $serviceName }}-dapr-config-{{ template "rand" . }}'
        {{ end }}

        {{ else }}
        dapr.io/enabled: 'true'
        dapr.io/app-id: '{{ $.Release.Name  }}-{{ $serviceName }}'
        dapr.io/app-port: '80'
        dapr.io/http-max-request-size: '128'
        dapr.io/log-level: 'warn'
        dapr.io/log-as-json: 'true'
        dapr.io/sidecar-listen-addresses: '0.0.0.0'
        dapr.io/sidecar-memory-limit: '256Mi'
        dapr.io/sidecar-memory-request: '128Mi'
        {{ end }}
    spec:   
      {{ if $service.init  }}  
      initContainers: 
      - name: {{ $.Release.Name  }}-{{ $serviceName }}-init
        {{ if $service.registry }}
        image: {{ $service.registry }}/{{ $.Release.Name  }}/{{ $serviceName }}
        {{ else if ( $.Values.global | default dict ).registry }}
        image: {{ $.Values.global.registry }}/{{ $.Release.Name  }}/{{ $serviceName }}
        {{ else }}
        image: {{ $.Release.Name  }}/{{ $serviceName }}
        {{ end }}        
        {{ if $service.init.args }}
        args: 
        {{ range $service.init.args }}
          - {{ quote . }}
        {{ end }}
        {{ end }}
        ports: 
        - containerPort: 80
        volumeMounts: 
        - name: cacertificates
          mountPath: /etc/ssl/certs
          readOnly: true
        imagePullPolicy: IfNotPresent
        env:
        {{ if $service.configs }}
        {{ range $service.configs }}
        {{ if .env }}
        - name: {{ .env }}
          valueFrom: 
            configMapKeyRef: 
              name: {{ $.Release.Name  }}-{{ $serviceName }}-config-{{ template "rand" . }}
              key: {{ .name }}
        {{ end }}
        {{ end }}
        {{ end }}
        {{ if $service.secrets }}
        {{ range $service.secrets }}
        {{ if .env }}
        - name: {{ .env }}
          valueFrom: 
            secretKeyRef: 
              name: {{ $.Release.Name  }}-{{ $serviceName }}-secret-{{ template "rand" . }}
              key: {{ .name }}
        {{ end }}
        {{ end }}
        {{ end }}
        {{ if $service.mapEnvVars }}
        {{ if $service.mapEnvVars.identityServerUrl }}
        - name: {{ $service.mapEnvVars.identityServerUrl }} 
          valueFrom: 
            configMapKeyRef: 
              name: environment
              key: identity-server-url
        {{ end }}
        {{ if $service.mapEnvVars.environment }}
        - name: {{ $service.mapEnvVars.environment }}
          valueFrom: 
            configMapKeyRef: 
              name: environment
              key: name
        {{ end }}
        {{ end }}
      {{ end }}
      containers: 
      - name: {{ $.Release.Name  }}-{{ $serviceName }}
        {{ if $service.registry }}
        image: {{ $service.registry }}/{{ $.Release.Name  }}/{{ $serviceName }}
        {{ else if ( $.Values.global | default dict ).registry }}
        image: {{ $.Values.global.registry }}/{{ $.Release.Name  }}/{{ $serviceName }}
        {{ else }}
        image: {{ $.Release.Name  }}/{{ $serviceName }}
        {{ end }}
        {{- if .service.resources }}
        resources: {{ toYaml .service.resources | nindent 10 }}
        {{- end }}
        ports: 
        - containerPort: 80
        volumeMounts: 
        - name: cacertificates
          mountPath: /etc/ssl/certs
          readOnly: true
        imagePullPolicy: IfNotPresent
        env:
        {{ if $service.configs }}
        {{ range $service.configs }}
        {{ if .env }}
        - name: {{ .env }}
          valueFrom: 
            configMapKeyRef: 
              name: {{ $.Release.Name  }}-{{ $serviceName }}-config-{{ template "rand" . }}
              key: {{ .name }}
        {{ end }}
        {{ end }}
        {{ end }}
        {{ if $service.secrets }}
        {{ range $service.secrets }}
        {{ if .env }}
        - name: {{ .env }}
          valueFrom: 
            secretKeyRef: 
              name: {{ $.Release.Name  }}-{{ $serviceName }}-secret-{{ template "rand" . }}
              key: {{ .name }}
        {{ end }}
        {{ end }}
        {{ end }}
        {{ if $service.mapEnvVars }}
        {{ if $service.mapEnvVars.identityServerUrl }}
        - name: {{ $service.mapEnvVars.identityServerUrl }} 
          valueFrom: 
            configMapKeyRef: 
              name: environment
              key: identity-server-url
        {{ end }}
        {{ if $service.mapEnvVars.environment }}
        - name: {{ $service.mapEnvVars.environment }}
          valueFrom: 
            configMapKeyRef: 
              name: environment
              key: name
        {{ end }}
        {{ end }}
      volumes: 
      - name: cacertificates
        secret: 
          secretName: ca-certificates  
      {{ if $service.imagePullSecret }}
      imagePullSecrets:
      - name: {{ $service.imagePullSecret }}
      {{ else if ( $.Values.global | default dict ).imagePullSecret }}
      imagePullSecrets:
      - name: {{ $.Values.global.imagePullSecret }}
      {{ end }}
---
{{ end }}
{{ end }}
  
  
